name       : libffi
version    : '3.4.6'
release    : 14
source     :
    - https://github.com/libffi/libffi/releases/download/v3.4.6/libffi-3.4.6.tar.gz : b0dea9df23c863a7a50e825440f3ebffabd65df1497108e5d437747843895a4e
    - https://github.com/libffi/libffi/releases/download/v3.3/libffi-3.3.tar.gz : 72fba7922703ddfa7a028d513ac15a85c8d54c8d67f55fa5a4802885dc652056
extract    : no
homepage   : https://sourceware.org/libffi
license    : MIT
component  : system.base
summary    : Foreign Function Interface library
description: |
    The libffi library provides a portable, high level programming interface to various calling conventions. This allows a programmer to call any function specified by a call interface description at run time.
emul32     : yes
devel      : yes
patterns   :
    - devel :
        - /usr/share/info
builddeps  :
    - dejagnu-devel
setup      : |
    mkdir old_abi new_abi
    tar --strip-components=1 -xf $sources/libffi-3.3.tar.gz -C old_abi
    tar --strip-components=1 -xf $sources/libffi-3.4.6.tar.gz -C new_abi

    pushd old_abi
    %configure_no_runstatedir --disable-static
    popd

    pushd new_abi
    %configure --disable-static
    popd
build      : |
    pushd old_abi
    %make
    popd

    pushd new_abi
    %make
    popd
install    : |
    pushd old_abi
    %make_install
    # Cleanup things we don't need for ABI compat
    rm -rfv $installdir/usr/include \
            $installdir/usr/share \
            $installdir/%libdir%/pkgconfig \
            $installdir/%libdir%/libffi.so
    popd
    
    pushd new_abi
    %make_install
    popd
check      : |
    # We don't really care if checks for the old_abi fail, so skip that
    cd new_abi
    %make check
